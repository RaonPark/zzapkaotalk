spring:
  application:
    name: api-gateway
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8090/realms/zzapkaotalk/protocol/openid-connect/certs
          issuer-uri: http://localhost:8090/realms/zzapkaotalk
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: oauth2-client
            client-secret: H85Of0PKMGApj1b8DALnmCXaVGqTizGE
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            user-name-attribute: preferred_username
            issuer-uri: http://localhost:8090/realms/zzapkaotalk
            authorization-uri: http://localhost:8090/realms/zzapkaotalk/protocol/openid-connect/auth
  cloud:
    gateway:
      server:
        webflux:
          enabled: true
          routes:
            - id: chat-service
              uri: lb://CHAT-SERVICE
              predicates:
                - Path=/chat-service/**
              filters:
                - RewritePath=/chat-service/(?<remaining>.*), /${remaining}
                - name: CircuitBreaker
                  args:
                    name: chat-service-resilience
                    fallbackUri: forward:/fallback
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 20
                    redis-rate-limiter.burstCapacity: 100
                    redis-rate-limiter.requestedTokens: 1
                    key-resolver: "#{@userKeyResolver}"
            - id: user-service
              uri: lb://USER-SERVICE
              predicates:
                - Path=/auth/user/**
              filters:
                - RewritePath=/auth/user/(?<remaining>.*), /${remaining}
                - TokenRelay=

          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
  data:
    redis:
      port: 6379
      host: localhost
      lettuce:
        pool:
          max-active: 8
          enabled: true
  datasource:
    host: localhost
    port: 3306
    username: admin
    password: 1234
    database: zzapkaotalk
    url: r2dbc:mariadb://localhost:3306/zzapkaotalk

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8070/eureka/

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        sliding-window-type: COUNT_BASED
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 10
        permitted-number-of-calls-in-half-open-state: 5
    instances:
      chat-service-resilience:
        base-config: default

server:
  port: 8084

logging:
  level:
    org.springframework.cloud.loadbalancer: DEBUG
#    org.springframework.cloud.gateway: TRACE
