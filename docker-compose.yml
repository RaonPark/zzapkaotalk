services:
  kafka1:
    image: "confluentinc/cp-kafka:7.9.0"
    container_name: kafka1
    hostname: kafka1
    ports:
      - "10001:10001"
    restart: always
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_PROCESS_ROLES: 'controller, broker'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:10001
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:10001
      ALLOW_PLAINTEXT_LISTENERS: yes
      CLUSTER_ID: Z2l2ZW1lc3RyZW5ndGg
    networks:
      - zzapkaotalk
  kafka2:
    image: "confluentinc/cp-kafka:7.9.0"
    container_name: kafka2
    hostname: kafka2
    ports:
      - "10002:10002"
    restart: always
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_PROCESS_ROLES: 'controller, broker'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:10002
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:10002
      ALLOW_PLAINTEXT_LISTENERS: yes
      CLUSTER_ID: Z2l2ZW1lc3RyZW5ndGg
    networks:
      - zzapkaotalk
  kafka3:
    image: "confluentinc/cp-kafka:7.9.0"
    container_name: kafka3
    hostname: kafka3
    ports:
      - "10003:10003"
    restart: always
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_PROCESS_ROLES: 'controller, broker'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:10003
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:10003
      ALLOW_PLAINTEXT_LISTENERS: yes
      CLUSTER_ID: Z2l2ZW1lc3RyZW5ndGg
    networks:
      - zzapkaotalk

  schema-registry:
    image: "confluentinc/cp-schema-registry:7.9.0"
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "8085:8085"
    restart: always
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
      SCHEMA_REGISTRY_CUB_KAFKA_MIN_BROKERS: 3
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
    networks:
      - zzapkaotalk

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9000:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8085
      KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED: true
      KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED: true
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
    networks:
      - zzapkaotalk

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    networks:
      - zzapkaotalk

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.4
    ports:
      - "8090:8080"
    command:
      - "start-dev"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb:3306/zzapkaotalk
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: 1234
    depends_on:
      - mariadb
    networks:
      - zzapkaotalk

  mariadb:
    image: "mariadb:11.2"
    container_name: mariadb
    hostname: mariadb
    ports:
      - "3306:3306"
    environment:
      TZ: "Asia/Seoul"
      ALLOW_EMPTY_PASSWORD: no
      MARIADB_ROOT_PASSWORD: 1234
      MARIADB_DATABASE: zzapkaotalk
      MARIADB_USER: admin
      MARIADB_PASSWORD: 1234
    networks:
      - zzapkaotalk
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - node.name=es00
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - zzapkaotalk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
    networks:
      - zzapkaotalk
    depends_on:
      - elasticsearch

networks:
  zzapkaotalk:
    driver: bridge